{
  "printWidth": 80, // Specifies the line length that the printer will wrap on.
  "tabWidth": 2, // Specifies the number of spaces per indentation-level.
  "useTabs": false, // Indent lines with tabs instead of spaces.
  "semi": true, // Print semicolons at the ends of statements.
  "singleQuote": false, // Use single quotes instead of double quotes.
  "quoteProps": "as-needed", // Change when properties in objects are quoted.
  "jsxSingleQuote": false, // Use single quotes instead of double quotes in JSX.
  "trailingComma": "es5", // Print trailing commas wherever possible when multi-line.
  "bracketSpacing": true, // Print spaces between brackets in object literals.
  "jsxBracketSameLine": false, // Put the `>` of a multi-line JSX element at the end of the last line instead of being alone on the next line.
  "arrowParens": "always", // Include parentheses around a sole arrow function parameter.
  "rangeStart": 0, // Format only a segment of a file.
  "rangeEnd": Infinity, // Format only a segment of a file.
  "requirePragma": false, // Require a special comment, called a pragma, to be present in the file's first docblock comment in order for the file to be formatted.
  "insertPragma": false, // Insert a special @format marker at the top of files specifying that the file has been formatted with Prettier.
  "proseWrap": "preserve", // How to wrap prose. (markdown)
  "htmlWhitespaceSensitivity": "css", // How to handle whitespaces in HTML.
  "vueIndentScriptAndStyle": false, // Whether or not to indent the code inside <script> and <style> tags in Vue files.
  "endOfLine": "lf", // Which end of line characters to apply.
  "embeddedLanguageFormatting": "auto" // Control whether Prettier formats quoted code embedded in the file.
}
