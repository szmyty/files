---
# docker-compose.yml
# Docker Compose file including Kestra, PostgreSQL, and Caddy server.

volumes:
  kestra-postgres-data:
  kestra-storage-data:

services:
  kestra-postgres:
    image: postgres:14
    container_name: kestra-postgres
    volumes:
      - kestra-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 10

  kestra-server:
    image: kestra/kestra:latest
    container_name: kestra-server
    user: "root"
    command: server standalone --worker-thread=128 --flow-path=/etc/kestra/workflows
    volumes:
      - kestra-storage-data:/data/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kestra:/etc/kestra  # Configuration files, including workflows
      - ./input:/data/input  # Host directory to watch
      - ./output:/data/output  # Host directory for processed files
      - ./processed:/data/processed  # Host directory for moved files
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://kestra-postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basic-auth:
              enabled: false
          repository:
            type: postgres
          storage:
            type: local
            local:
              base-path: "/data/storage"
          queue:
            type: postgres
          tasks:
            tmp-dir:
              path: /tmp/kestra-wd/tmp
          repositories:
            git:
              uri: file:///etc/kestra/workflows
      KESTRA_MEMORYRUNNER_VOLUMES: |
        - /data/input:/data/input
        - /data/output:/data/output
        - /data/processed:/data/processed
    ports:
      - "8080:8080"  # Kestra API
      - "8081:8081"  # Kestra UI
    depends_on:
      kestra-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    # healthcheck:
    #   test: ["CMD", "wget", "--spider", "--proxy", "off", "http://localhost:8080/api/v1/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  caddy:
    image: caddy:latest
    container_name: caddy-server
    volumes:
      - ./output:/usr/share/caddy  # Serve processed files from host directory
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "81:80"
    # depends_on:
    #   kestra-server:
    #     condition: service_healthy
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
