volumes:
  postgres-data:
  kestra-data:
  minio-data:
  entwine-output:

services:
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10

  kestra-scheduler:
    image: kestra/kestra:latest
    user: "root"
    command: server scheduler
    volumes:
      - kestra-data:/app/storage
      - ./workflows:/opt/kestra/flows
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      KESTRA_CONFIGURATION: &common_configuration |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basicAuth:
              enabled: false
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
    depends_on:
      postgres:
        condition: service_healthy

  kestra-worker:
    image: kestra/kestra:latest
    user: "root"
    command: server worker
    volumes:
      - kestra-data:/app/storage
      - ./workflows:/opt/kestra/flows
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      KESTRA_CONFIGURATION: *common_configuration
    depends_on:
      postgres:
        condition: service_healthy

  kestra-executor:
    image: kestra/kestra:latest
    user: "root"
    command: server executor
    volumes:
      - kestra-data:/app/storage
      - ./workflows:/opt/kestra/flows
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      KESTRA_CONFIGURATION: *common_configuration
    depends_on:
      postgres:
        condition: service_healthy

  kestra-webserver:
    image: kestra/kestra:latest
    user: "root"
    command: server webserver
    volumes:
      - kestra-data:/app/storage
      - ./workflows:/opt/kestra/flows
    environment:
      KESTRA_CONFIGURATION: *common_configuration
      KESTRA_URL: http://localhost:8080/
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000"
    volumes:
      - minio-data:/data

  caddy:
    image: caddy:latest
    ports:
      - "80:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - entwine-output:/usr/share/caddy
