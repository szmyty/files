version: '3.8'

volumes:
  postgres-data:
  kestra-data:
  minio-data:
  entwine-output:

services:
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10

  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin) do echo 'waiting for minio...' && sleep 2; done;
      /usr/bin/mc mb myminio/input-bucket || true;
      "

  kestra:
    image: kestra/kestra:latest
    user: "root"
    command: server standalone --flow-path /opt/kestra/flows
    volumes:
      - kestra-data:/app/storage
      - ./workflows:/opt/kestra/flows
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          tutorialFlows:
            enabled: false
          server:
            port: 8080
            basicAuth:
              enabled: false
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          anonymousUsageReport:
            enabled: false
          metrics:
            prefix: kestra
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          micronaut:
            security:
              x509:
                enabled: false
            ssl:
              enabled: false
            server:
              maxRequestSize: 10GB
              multipart:
                maxFileSize: 10GB
                disk: true
              readIdleTimeout: 60m
              writeIdleTimeout: 60m
              idleTimeout: 60m
              netty:
                maxChunkSize: 10MB
              contextPath: "kestra"
              cors:
                enabled: true
                allowedOrigins: "*"
                allowedMethods: "*"
                allowedHeaders: "*"
                maxAge: 1800
              hostResolution:
                hostHeader: Host
                protocolHeader: X-Forwarded-Proto
              plugins:
                repositories:
                  central:
                    url: https://repo.maven.apache.org/maven2/
                  jcenter:
                    url: https://jcenter.bintray.com/
                  kestra:
                    url: https://dl.bintray.com/kestra/maven
              variables:
                envVarsPrefix: KESTRA_
      KESTRA_URL: http://localhost:8080/
      KESTRA_PLUGINS: io.kestra.plugin:scripts:2.4.0,io.kestra.plugin:minio:2.4.0
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully

  caddy:
    image: caddy:latest
    ports:
      - "80:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - entwine-output:/usr/share/caddy
